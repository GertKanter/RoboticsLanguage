node(
  name:"example functions",
  definitions: block(
    y ∈ ℤ = 1,
    x ∈ ℤ = 2,
    z ∈ ℤ = 3,
    s ∈ Strings = "Hello",

    # optional arguments
    define test_1(x ∈ Integers, y ∈ Integers, z ∈ Integers = 1) -> Integers:
      return(x+y+z),

    # single argument
    define testB(x ∈ ℝ) -> ℝ:
      return(x+1),

    # no return
    define testC(x ∈ Strings):
      print(x),

    # no arguments, no return
    define testD():
      block(
        print("Test D"),
        print("Works")
      ),

    # return multiple parameters
    define testE(x ∈ Integers, y ∈ Integers) -> (Integers, Integers):
      return(y,x)
  ),

  initialise: block(
    x = test_1(x,y,z),
    x = test_1(x,y),

    testB(3),

    testC(s),
    testC("Test C"),

    testD(),

    {x, y} = testE(1,2),
    print(x),
    print(y)

  )
)
