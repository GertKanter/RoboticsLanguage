node(
  name:"example types",

  definitions:block(

    # The type is defined as a real number that translates to a rostype of Float32 by default
    x ∈ Signals(Reals,
      rosTopic:'/test/x',
      rosFlow:'incoming'),

    # The type is an explicit ROS type
    y ∈ Signals(
      rosType:'std_msgs/Float32',
      rosTopic:'/test/y',
      rosFlow:'incoming')
      ,

    # The type is an explicit ROS type
    z ∈ Signals(
      rosType:'geometry_msgs/Pose',
      rosTopic:'/test/z',
      rosFlow:'incoming'
      ),

  initialise:block(

    # x can be used directly as a real number
    x = 4,

    # y has to be used as a rosType
    y['data'] = 4,
    y.data = 5,

    # z can be accessed as a class
    z.Point.x = 5
  )
)
)
