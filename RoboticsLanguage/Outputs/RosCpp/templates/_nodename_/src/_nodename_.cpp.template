/*
 * Node name: {{parameters['node']['name']}}
 *
 * Generated on: {{"%d %B, %Y"|todaysDate}}
 *       Author: {{parameters['Information']['user']['name']}}
 *      Licence: {{parameters['Information']['software']['license']}}
 *    Copyright: {{parameters['Information']['software']['copyright']}}
 *
 *    THIS FILE WAS AUTOMATICALLY GENERATED USING THE ROBOTICS LANGUAGE
 *
 */

#include "{{parameters['node']['name']|underscore}}/{{parameters['node']['name']|underscore}}.h"

/***************************************************************************************
*       {{parameters['node']['name']|camelCase}}Class Definition
****************************************************************************************/
namespace {{parameters['node']['name']|underscore}}
{

  /******************************* constructor *****************************************/
  {{parameters['node']['name']|camelCase}}Class::{{parameters['node']['name']|camelCase}}Class():
    nh_("~")
  {
    initNode();
  }

  /******************************* initNode ********************************************/
  void {{parameters['node']['name']|camelCase}}Class::initNode()
  {
    // Initialization
    {{code|xpath('/node/initialise')|attribute('RosCpp')}}

  }

  /******************************* spin ************************************************/
  void {{parameters['node']['name']|camelCase}}Class::spin()
  {
    // Sets the spin rate
    ros::Rate r({{code|xpath('/node')|optionalArgument('rate')|attribute('RosCpp')}});
    while(ros::ok())
    {
      ros::spinOnce();
      r.sleep();
    }
  }
}

/****************************************************************************************
* The Main
*****************************************************************************************/
int main(int argc, char **argv)
{
  // Initialize the node
  ros::init(argc, argv, "{{parameters['node']['name']|underscore}}");

  // Create the node object
  {{parameters['node']['name']|underscore}}::{{parameters['node']['name']|camelCase}}Class instance;

  // Spin the node
  instance.spin();

  return 0;
}
