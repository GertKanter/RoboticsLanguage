/*
 * Node name: {{parameters['node']['name']}}
 *
 * Generated on: {{"%d %B, %Y"|todaysDate}}
 *       Author: {{parameters['Information']['user']['name']}}
 *      Licence: {{parameters['Information']['software']['license']}}
 *    Copyright: {{parameters['Information']['software']['copyright']}}
 *
 *    THIS FILE WAS AUTOMATICALLY GENERATED USING THE ROBOTICS LANGUAGE
 *
 */

#include "{{parameters['node']['name']|underscore}}/{{parameters['node']['name']|underscore}}.h"

/***************************************************************************************
*       {{parameters['node']['name']|camelCase}}Class Definition
****************************************************************************************/
namespace {{parameters['node']['name']|underscore}}
{

  /******************************* constructor *****************************************/
  {{parameters['node']['name']|camelCase}}Class::{{parameters['node']['name']|camelCase}}Class():
    nh_("~")
  {
  }


  /******************************* initialise ********************************************/
  void {{parameters['node']['name']|camelCase}}Class::initialise()
  {
    {{code|xpath('/node')|option('initialise')|attribute('RosCpp')}};
  }

  /******************************* finalise ********************************************/
  void {{parameters['node']['name']|camelCase}}Class::finalise()
  {
    {{code|xpath('/node')|option('finalise')|attribute('RosCpp')}};
  }

  /******************************* spin ************************************************/
  void {{parameters['node']['name']|camelCase}}Class::spin()
  {
    // Sets the spin rate
    ros::Rate r({{code|xpath('/node')|option('rate')|attribute('RosCpp')}});
    while(ros::ok())
    {
      ros::spinOnce();
      r.sleep();
    }
  }

  {% for function in code|xpaths('/node/option[@name="definitions"]/*/functionDefinition') -%}
  /******************************* {{function|attribute('name')}} ************************************************/
  {% set returns = function|xpaths('returns/@RosCpp')|first -%}
  {% if returns=="" %}void{% else %}{{returns}}{% endif %} {{parameters['node']['name']|camelCase}}Class::{{function|attribute('name')}}({{function|xpaths('arguments/@RosCpp')|first}})
  {
    {{function|xpaths('content/@RosCpp')|first}};
  }

  {% endfor -%}

}

/****************************************************************************************
* The Main
*****************************************************************************************/
int main(int argc, char **argv)
{
  // Initialize the node
  ros::init(argc, argv, "{{parameters['node']['name']|underscore}}");

  // Create the node object
  {{parameters['node']['name']|underscore}}::{{parameters['node']['name']|camelCase}}Class instance;

  // initialise
  instance.initialise();

  // Spin the node
  instance.spin();

  // finalise
  instance.finalise();

  return 0;
}
