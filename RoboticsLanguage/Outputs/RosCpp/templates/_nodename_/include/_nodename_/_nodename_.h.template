/*
 * Node name: {{parameters['node']['name']}}
 *
 * Generated on: {{"%d %B, %Y"|todaysDate}}
 *       Author: {{parameters['Information']['user']['name']}}
 *      Licence: {{parameters['Information']['software']['license']}}
 *    Copyright: {{parameters['Information']['software']['copyright']}}
 *
 *    THIS FILE WAS AUTOMATICALLY GENERATED USING THE ROBOTICS LANGUAGE
 *
 */
#ifndef {{parameters['node']['name']|underscoreFullCaps}}_{{parameters['node']['name']|underscoreFullCaps}}_H
#define {{parameters['node']['name']|underscoreFullCaps}}_{{parameters['node']['name']|underscoreFullCaps}}_H

// Base libraries
#include <ros/ros.h>


/***************************************************************************************
*       {{parameters['node']['name']|camelCase }}Class Declaration
****************************************************************************************/
namespace {{parameters['node']['name']|underscore}}
{
  class {{parameters['node']['name']|camelCase }}Class
  {
    public:

      // Constructor
      {{parameters['node']['name']|camelCase }}Class();

      /*!
       * @brief Spins the node (checks for ros callbacks)
       */
      void spin();

    private:

      // The ROS node handle
      ros::NodeHandle nh_; /**< "Global" NodeHandle */

      /*!
       * @brief initNode initializes anything needed for this node
       */
      virtual void initNode();

  };
}

#endif // {{parameters['node']['name']|underscoreFullCaps }}_{{parameters['node']['name']|underscoreFullCaps }}_H
